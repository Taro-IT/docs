"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1991],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(r),m=i,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||a;return r?n.createElement(g,o(o({ref:t},c),{},{components:r})):n.createElement(g,o({ref:t},c))}));function m(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,o=new Array(a);o[0]=p;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},92041:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var n=r(87462),i=r(63366),a=(r(67294),r(3905)),o=["components"],l={},s="G18 - Gu\xeda de reversi\xf3n de c\xf3digo",u={unversionedId:"guias/G18-guia-reversion-codigo",id:"guias/G18-guia-reversion-codigo",isDocsHomePage:!1,title:"G18 - Gu\xeda de reversi\xf3n de c\xf3digo",description:"Objetivo(s)",source:"@site/docs/guias/G18-guia-reversion-codigo.md",sourceDirName:"guias",slug:"/guias/G18-guia-reversion-codigo",permalink:"/docs/guias/G18-guia-reversion-codigo",editUrl:"https://github.com/Taro-IT/docs/edit/main/docs/guias/G18-guia-reversion-codigo.md",version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"G17 - Gu\xeda para Defect Log",permalink:"/docs/guias/G17-guia-defect-log"},next:{title:"G19 - Gu\xeda para Testing en Laravel",permalink:"/docs/guias/G19-guia-testing-laravel"}},c=[{value:"Objetivo(s)",id:"objetivos",children:[]},{value:"Pre-requisitos",id:"pre-requisitos",children:[]},{value:"Pasos a seguir",id:"pasos-a-seguir",children:[{value:"git reverse",id:"git-reverse",children:[]},{value:"git reset",id:"git-reset",children:[]}]},{value:"Salidas",id:"salidas",children:[]},{value:"Autores",id:"autores",children:[]},{value:"Auditor\xeda",id:"auditor\xeda",children:[]},{value:"Versi\xf3n 1.0",id:"versi\xf3n-10",children:[]}],d={toc:c};function p(e){var t=e.components,l=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,n.Z)({},d,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"g18---gu\xeda-de-reversi\xf3n-de-c\xf3digo"},"G18 - Gu\xeda de reversi\xf3n de c\xf3digo"),(0,a.kt)("h2",{id:"objetivos"},"Objetivo(s)"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Definir como revertir el c\xf3digo en caso de ser necesario usando la herramienta definida para el control de versiones de c\xf3digo (Git).")),(0,a.kt)("h2",{id:"pre-requisitos"},"Pre-requisitos"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Estar en la rama a revertir ")),(0,a.kt)("h2",{id:"pasos-a-seguir"},"Pasos a seguir"),(0,a.kt)("h3",{id:"git-reverse"},"git reverse"),(0,a.kt)("p",null,"El comando ",(0,a.kt)("inlineCode",{parentName:"p"},"git reverse")," revierte el proyecto al estado de un commit ",(0,a.kt)("strong",{parentName:"p"},"generando un nuevo commit")," que revierte los cambios realizados. De esta manera las modificaciones ",(0,a.kt)("strong",{parentName:"p"},"no son eliminadas del historial")," y pueden ser accedidas en el futuro. Los cambios locales que no han sido guardados son sobrescritos."),(0,a.kt)("p",null,"Para hacer ",(0,a.kt)("inlineCode",{parentName:"p"},"git reverse")," sobre el \xfaltimo commit:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git reverse HEAD~1\n")),(0,a.kt)("p",null,"O haciendo referencia al ID del commit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git reverse 52gu\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"git reverse",src:r(68151).Z})),(0,a.kt)("p",null,"Puede utilizarse ",(0,a.kt)("inlineCode",{parentName:"p"},"git reverse")," cuando:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Se han hecho publicaciones que quieren revertirse pero desean mantenerse en el historial.")),(0,a.kt)("p",null,"NO debe utilizarse reverse cuando:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Se han publicado modificaciones que contienen informaci\xf3n sensible que no quiere ser registrada en el historial.\nSe han publicado archivos que quieren eliminarse permanentemente del historial.")),(0,a.kt)("h3",{id:"git-reset"},"git reset"),(0,a.kt)("p",null,"El comando ",(0,a.kt)("inlineCode",{parentName:"p"},"git reset")," se utiliza para mover el proyecto a un commit anterior eliminando todos los commits posteriores del historial. "),(0,a.kt)("p",null,"Para hacer ",(0,a.kt)("inlineCode",{parentName:"p"},"git reset")," sobre el \xfaltimo commit:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git reset HEAD~1\n")),(0,a.kt)("p",null,"O haciendo referencia al ID del commit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git reset 52gu\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"git reset",src:r(48226).Z})),(0,a.kt)("p",null,"Para hacer ",(0,a.kt)("inlineCode",{parentName:"p"},"git reset")," sobre los \xfaltimos dos commits"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git reset HEAD~2\n")),(0,a.kt)("p",null,"O haciendo referencia al ID del commit."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git reset 2yd5\n")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"git reset",src:r(42882).Z})),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"git reset")," puede utilizarse con dos opciones:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git reset --soft [<commit>]\n")),(0,a.kt)("p",null,"Genera un reset de HEAD hacia otro commit. No modifica el \xedndice de archivos ni el contenido local. Esto significa que los archivos agregados o eliminados y los cambios producidos durante estos commits reseteados se mantendr\xe1n en el contenido local."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git reset --hard [<commit>]\n")),(0,a.kt)("p",null,"Modifica el HEAD, el \xedndice de archivos y el contenido local. El estado del proyecto es el equivalente al que se encontraba en el commit al que fue reseteado."),(0,a.kt)("p",null,"Puede utilizarse reset cuando:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Se han hecho commits equivocados no publicados y se desea deshacer los cambios: En el caso de no querer mantener ningunos de los cambios locales realizados puede utilizarse la bandera ",(0,a.kt)("inlineCode",{parentName:"li"},"--hard"),", en caso contrario, si se quieren mantener esos cambios para realizar un commit con ellos m\xe1s adelante puede utilizarse la bandera ",(0,a.kt)("inlineCode",{parentName:"li"},"--soft"),"."),(0,a.kt)("li",{parentName:"ul"},"Se han publicado commits cuya informaci\xf3n se desea eliminar del historial permanentemente.")),(0,a.kt)("p",null,"NO debe utilizarse ",(0,a.kt)("inlineCode",{parentName:"p"},"git reset")," cuando:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Se quiere regresar el proyecto al estado de un estado anterior pero se quiere mantener registros de esos cambios. En este caso debe utilizarse el comando ",(0,a.kt)("inlineCode",{parentName:"li"},"git reverse"),"."),(0,a.kt)("li",{parentName:"ul"},"Se est\xe1 trabajando en proyecto entre m\xe1s de una persona y no existen un consenso grupal sobre el revertido permanente.")),(0,a.kt)("h2",{id:"salidas"},"Salidas"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"La rama revertida a un punto anterior ")),(0,a.kt)("h2",{id:"autores"},"Autores"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Juan Manuel Amador Perez Flores ")),(0,a.kt)("h2",{id:"auditor\xeda"},"Auditor\xeda"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Adolfo Acosta Castro")),(0,a.kt)("h2",{id:"versi\xf3n-10"},"Versi\xf3n 1.0"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Se cre\xf3 el proceso.")))}p.isMDXComponent=!0},42882:function(e,t,r){t.Z=r.p+"assets/images/gitreset-2-5fc094ead5347bb766a03acb3d5d23e1.png"},48226:function(e,t,r){t.Z=r.p+"assets/images/gitreset-0c141b4e71aae08d3e4c11cb1d0957d5.png"},68151:function(e,t,r){t.Z=r.p+"assets/images/gitreverse-a827504e871d734c305f5562b8818f98.png"}}]);